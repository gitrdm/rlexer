% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scanner.R
\name{Scanner}
\alias{Scanner}
\title{Scanner Class}
\description{
This class is designed for lexical analysis, converting a source string into a list of tokens.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{source}}{The source code as a string to be scanned.}

\item{\code{tokens}}{A list to store the tokens generated from the source code.}

\item{\code{start}}{The index of the first character in the current lexeme being scanned.}

\item{\code{current}}{The index of the current character being scanned.}

\item{\code{line}}{The current line number in the source code.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Scanner-new}{\code{Scanner$new()}}
\item \href{#method-Scanner-scanTokens}{\code{Scanner$scanTokens()}}
\item \href{#method-Scanner-scanToken}{\code{Scanner$scanToken()}}
\item \href{#method-Scanner-identifier}{\code{Scanner$identifier()}}
\item \href{#method-Scanner-number}{\code{Scanner$number()}}
\item \href{#method-Scanner-string}{\code{Scanner$string()}}
\item \href{#method-Scanner-match}{\code{Scanner$match()}}
\item \href{#method-Scanner-peek}{\code{Scanner$peek()}}
\item \href{#method-Scanner-peekNext}{\code{Scanner$peekNext()}}
\item \href{#method-Scanner-isAlpha}{\code{Scanner$isAlpha()}}
\item \href{#method-Scanner-isAlphaNumeric}{\code{Scanner$isAlphaNumeric()}}
\item \href{#method-Scanner-isDigit}{\code{Scanner$isDigit()}}
\item \href{#method-Scanner-isAtEnd}{\code{Scanner$isAtEnd()}}
\item \href{#method-Scanner-advance}{\code{Scanner$advance()}}
\item \href{#method-Scanner-addToken}{\code{Scanner$addToken()}}
\item \href{#method-Scanner-clone}{\code{Scanner$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-new"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$new(source)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{source}}{Scan Tokens

Scans the source code and generates a list of tokens.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-scanTokens"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-scanTokens}{}}}
\subsection{Method \code{scanTokens()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$scanTokens()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of tokens.
Scan a Single Token

Scans and identifies the next token in the source code.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-scanToken"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-scanToken}{}}}
\subsection{Method \code{scanToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$scanToken()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The next token.
Scan Identifier

Scans and identifies an identifier token.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-identifier"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-identifier}{}}}
\subsection{Method \code{identifier()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$identifier()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The identifier token.
Scan Number

Scans and identifies a numeric token.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-number"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-number}{}}}
\subsection{Method \code{number()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$number()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The numeric token.

Scan String

Scans and identifies a string token.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-string"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-string}{}}}
\subsection{Method \code{string()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$string()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The string token.

Scan String

Scans and identifies a string token.
Match Character

Checks if the next character matches the expected character.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-match"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-match}{}}}
\subsection{Method \code{match()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$match(expected)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{expected}}{The expected character.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if the next character matches the expected character, FALSE otherwise.
Peek

Returns the current character without advancing the scanner.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-peek"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-peek}{}}}
\subsection{Method \code{peek()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$peek()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The current character.
Peek Next

Returns the next character without advancing the scanner.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-peekNext"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-peekNext}{}}}
\subsection{Method \code{peekNext()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$peekNext()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The next character.
Check if Alpha

Checks if the character is an alphabetical character.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-isAlpha"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-isAlpha}{}}}
\subsection{Method \code{isAlpha()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$isAlpha(c)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{c}}{The character to check.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if the character is alphabetical, FALSE otherwise.
Check if AlphaNumeric

Checks if the character is alphanumeric.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-isAlphaNumeric"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-isAlphaNumeric}{}}}
\subsection{Method \code{isAlphaNumeric()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$isAlphaNumeric(c)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{c}}{The character to check.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if the character is alphanumeric, FALSE otherwise.
Check if Digit

Checks if the character is a digit.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-isDigit"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-isDigit}{}}}
\subsection{Method \code{isDigit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$isDigit(c)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{c}}{The character to check.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if the character is a digit, FALSE otherwise.
Check if At End

Checks if the scanner has reached the end of the source code.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-isAtEnd"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-isAtEnd}{}}}
\subsection{Method \code{isAtEnd()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$isAtEnd()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE if the scanner is at the end of the source code, FALSE otherwise.
Advance

Advances the scanner to the next character.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-advance"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-advance}{}}}
\subsection{Method \code{advance()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$advance()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The next character.
Add Token

Adds a new token to the list of tokens.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-addToken"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-addToken}{}}}
\subsection{Method \code{addToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$addToken(type, literal = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{The type of the token.}

\item{\code{literal}}{The literal value of the token (optional).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Scanner-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Scanner-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Scanner$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
